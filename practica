package main
import (
	"fmt"
	"database/sql"
	_ "github.com/go-sql-driver/mysql"	
)
var (
	err error
	db *sql.DB
)
func main(){
	nuevaConexionDB()
	tablaBD()
	cerrarDB()
	//membresia("membresia","tipo_membresia")
	//resultadosQuery("tipo_membresia")
    
}
func nuevaConexionDB(){
	//usuario:contrase√±a@tcp(direccion:puerto)/nombreBase
	//db, err = sql.Open("mysql", string("bienhechor:Bienhechor_1234;@tcp(74.208.31.248:3306)/bienhechor"))
	db, err = sql.Open("mysql", string("root:@tcp(127.0.0.1:3306)/bienhechor"))
	if err != nil{
		panic(err)
		fmt.Println("False")
	}

	fmt.Println("True")	
	err=db.Ping()
	revisarError(err)
}
func tablaBD(){
	datos := db.QueryRow("SELECT id_membresia, tipo_membresia FROM membresia")
	err=datos.Scan(&id_membresia, &tipo_membresia)
	revisarError()
	fmt.Println(datos)
}
/*func membresia (tabla string){
	var tipo_membresia string
	unicoDato := db.QueryRow("SELECT tipo_membresia FROM"+tabla+"WHERE id = ?", 1)
	err = unicoDato.Scan(&tipo_membresia)
	revisarError(err)
	fmt.Println(tipo_membresia)
}
func resultadosQuery(){
	query, _ := db.Query("SELECT * FROM membresia")

	for query.Next(){
		var id, tipo_membresia string
		err = query.Scan(&id, &tipo_membresia)
		revisarError(err)
		fmt.Println(id,tipo_membresia)
	}
}*/
func revisarError(err error){
	if err != nil{
		panic(err)
	}
}
func cerrarDB(){
	defer db.close();
}